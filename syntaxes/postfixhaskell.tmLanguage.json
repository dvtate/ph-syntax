{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "postfixhaskell",
	"patterns": [
		{
			"include": "#keywords"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#brace-expression"
		},
		{
			"include": "#numbers"
		},
		{
			"include": "#comments"
		},
		{
			"include": "#typenames"
		},
		{
			"include": "#identifiers"
		}
	],
	"repository": {
		"keywords": {
			"patterns": [
				{
					"name": "keyword.control.postfixhaskell",
					"match": "(?:\\s|\\b|^)(\\=|fun|class|unpack|type|global|export|import|require|use|namespace|enum|\\@|\\~|\\=\\=|static_init|static_region|asm|_asm)\\b"
				}, {
					"name": "keyword.operator.new",
					"match": "(?:\\s|\\b|^)\\b(make)\\b"
				},  {
					"name": "keyword.other",
					"match": "(?:\\s|\\b|^)\\b(Arrow|Any|Never|global|I32|F32|F64|I64|Syntax\\:Macro|Syntax\\:Data|Syntax\\:Type|Syntax\\:Id|Syntax\\:Expr|Syntax\\:Fxn|Syntax\\:Str|Syntax\\:Ns|Syntax\\:EnumNs)\\b"
				}
			]
		},
		"strings": {
			"name": "string.quoted.double.postfixhaskell",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"name": "constant.character.escape.postfixhaskell",
					"match": "\\\\."
				}
			]
		},
		"brace-expression": {
			"begin": "\\{",
			"end": "\\}",
			"beginCaptures": {
			  "0": { "name": "punctuation.definition.block.postfixhaskell" }
			},
			"endCaptures": {
			  "0": { "name": "punctuation.definition.block.postfixhaskell" }
			},
			"name": "expression.group",
			"patterns": [{
				"include": "#expression"
			}]
		},
		"numbers": {
			"patterns": [{
				"name": "constant.numeric.postfixhaskell",
				"match": "(\\b|\\s)\\-?[0-9]+(\\.[0-9]+)?(L|l|F|f)?\\b"
			}]
		},
		"identifiers": {
			"patterns": [{
				"comment": "escaped identifiers",
				"name": "variable.other.postfixhaskell",
				"match": "(\\s|\\b|^)\\$\\S+\\b"
			}, {
				"comment": "Compiler debugging macros",
				"name": "entity.name.function.postfixhaskell",
				"match": "(\\s|\\b|^)(\\:[^\\s\\}\\{]+)\\b"
			}]
		},
		"comments": {
			"patterns": [{
				"name": "comment.line.postfixhaskell",
				"match": "\\#.*"
			}]
		},
		"typenames": {
			"patterns": [{
				"name": "entity.name.type.postfixhaskell",
				"match": "(\\s|\\b|^)[A-Z]\\S+\\b"
			}]
		}
	},
	"scopeName": "source.phs"
}